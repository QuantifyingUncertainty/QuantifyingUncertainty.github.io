{"name":"Quantifyinguncertainty.GitHub.io","tagline":"","body":"##<a name=\"intro\"/>1. Introduction\r\n\r\nThe \"Quantifying Uncertainty\" project develops code, examples and documentation for the Generalized Metropolis-Hastings (GMH) algorithm detailed in [(Calderhead, 2014)](#calder14). It can be used to run parallelized Monte-Carlo Markov Chains (MCMC) to estimate model parameters of complex physical and biological processes. The GMH algorithm has been used to that end in the scientific publications detailed in the [References](#refs).\r\n\r\nThe GMH MCMC code is written in [Julia](http://julialang.org), a language designed for fast and flexible technical computing. It combines aspects of R, MATLAB and Python and can be easily parallelized to take advantage of multi-processor computers and clusters. It has an active developer community making Julia technical computing available on Windows, Linux and Mac, and via cloud computing services such as [JuliaBox](http://juliabox.org/) or [Amazon Web Services](http://aws.amazon.com/) (AWS).\r\n\r\nThere are 2 different but overlapping situations to use the GMH functionality:\r\n\r\n1. To replicate MCMC experiments from [published scientific papers](#refs). In this case, we recommend to run the experiments from a pre-compiled machine image published on AWS. The machine images contain all the required code, libraries and data to run the MCMC experiments for a particular article, substantially reducing your set-up time. By following the AWS setup steps below, you will be able to run these experiments via a web browser such as Firefox or Chrome.\r\n2. To use the GMH library to design your own MCMC experiments. The preferred way in this case is to download the GMH repository from GitHub to your local machine or to work in the cloud via [JuliaBox](http://juliabox.org). \r\n\r\nThe GMH repository resides on [GitHub](https://github.com/QuantifyingUncertainty/GeneralizedMetropolisHastings.jl). Documentation and examples to develop your own MCMC experiments are included in the repository. The remainder of the documentation below outlines how to set up and use the GMH repository on different platforms (AWS, JuliaBox, or your local machine). It explains in detail how to sign up for AWS, how to start and use a published AMI, how to use the GMH repository on [Juliabox](http://juliabox.org) or on your local machine, and how to publish your own AMI to accompany the publication of scientific articles that use the GMH repository.\r\n\r\n##<a name=\"acronyms\"/>2. Acronyms\r\nAcronym | Full Name | Description\r\n:------:|:----------|:-----------\r\n**AMI** | Amazon Machine Image | An pre-compiled software image for a virtual server\r\n**AWS** | Amazon Web Services  | Amazon's cloud computing services\r\n**EC2** | Elastic Cloud Computing | AWS service to run virtual servers\r\n**IAM** | Identity and Access Management | AWS service to create users and manage access to other services\r\n**GMH** | Generalized Metropolis Hastings | Parallel Metropolis Hastings from [(Calderhead, 2014)](#calder14)\r\n**MCMC** | [Monte-Carlo Markov Chain](https://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo) | Class of algorithms to sample from unknown probability distributions\r\n\r\n##<a name=\"aws-setup\"/>3. AWS Setup\r\n\r\n###<a name=\"aws-signup\"/>Step 3.1: Sign up for an AWS account\r\n\r\nThis step requires a credit card to set up an account and a phone number to receive a security callback. By using Amazon's \"Free Tier\", it is possible to avoid being billed, but the credit card is still required. Follow the instructions in the following AWS documentation:\r\n\r\nhttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html\r\n\r\nYou should complete the following steps: \r\n\r\n1. Create an AWS account\r\n2. Create one or more IAM users\r\n3. Create a Key Pair\r\n4. Create a Security Group. \r\n\r\n###<a name=\"sg-rules\"/>Required Security Group Settings\r\nWhen setting up the Security Group, specify the following inbound rules:\r\n\r\nService | Port | Source | Access\r\n:-------|:----:|:-----: | :-----\r\nSSH | 22 | 0.0.0.0/0 | SSH command-line access\r\nCustom TCP Rule | 8898 | 0.0.0.0/0 | Web browser access to IJulia server\r\nCustom TCP Rule | 49152 - 65535 | 127.0.0.1/32 | Localhost ports for IJulia server\r\n\r\nThe “0.0.0.0/0” in the “Source” field means that incoming connections from any IP address are allowed. You can make the security group more secure by only allowing incoming connections from known IP addresses (e.g., \"My IP\" in the EC2 control panel). This means, however, that every time you change your local IP address you will have to update the Security Group. As long as you are careful in the steps outlined in Securing the Jupyter server, the above settings should be fine.\r\n\r\nThe entire process of setting up an account, creating IAM users and setting up a security group is likely to take between 1 and 2 hours, depending on your familiarity with AWS. These steps need to be completed only once.\r\n\r\n###<a name=\"aws-region\"/>Step 3.2: Open the EC2 dashboard and check the region\r\n\r\nThis step typically needs to be performed only once - especially upon first signing up for AWS or if you cannot see the AMIs published for the different articles. From the AWS console, select “EC2”. The EC2 dashboard will open.\r\n\r\nAmazon regions (data centers) are independent. In order to find the AMIs described below, you need to make sure that you are logged into the correct region. At this moment, the only region in which the pre-compiled AMIs are published is “Ireland”. Check this in the top right corner of the EC2 dashboard, between your IAM username and “Support”.\r\n\r\n##<a name=\"gmh-on-aws\"/> 4. Using GMH on an EC2 AMI \r\n\r\n##<a name=\"gmh-on-box\"/> 5. Using GMH on JuliaBox\r\n\r\n##<a name=\"gmh-on-local\"/>6. Using GMH locally\r\n\r\n##<a name=\"gmh-ami-setup\"/>7. Setting up an EC2 AMI\r\n\r\nThese notes contain the different steps required to set up an Jupyter/IJulia server with GHM on AWS. For up to date information see the documentation from the [IJulia](https://github.com/JuliaLang/IJulia.jl) and [Jupyter](http://jupyter-notebook.readthedocs.org/en/latest/public_server.html) pages.\r\n\r\n###<a name=\"ec2-launch\"/>Step 7.1 Launch an EC2 instance\r\n\r\nFollow these instructions to launch a new machine instance:\r\n\r\nhttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-instance_linux.html\r\n\r\nChoose the Ubuntu Server 14.04 LTS (or a later version of Ubuntu). Different instance types have different costs associated. The one that currently falls within AWS's Free Tier is t2.micro.\r\n\r\n###<a name=\"ec2-connect\"/>Step 7.2: Connect to the EC2 instance\r\n\r\nFollow these instructions to connect to the instance:\r\n\r\nhttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-connect-to-instance-linux.html\r\n\r\nGenerate a new Key Pair when connecting to this machine for the first time, or use one previously generated (see [Step 3.1](#aws-signup). The username for the Ubuntu Server 14.04LTS defaults to **ubuntu**.\r\n\r\n###<a name=\"ec2-install-julia\"/>Step 7.3 Install Julia on the machine\r\n\r\nIn order to install the latest stable release of Julia, connect via SSH and execute:\r\n\r\n```\r\nsudo add-apt-repository ppa:staticfloat/julia-deps\r\nsudo add-apt-repository ppa:staticfloat/juliareleases\r\nsudo apt-get update\r\nsudo apt-get -y install build-essential\r\nsudo apt-get -y install julia\r\n```\r\n\r\nThe **build-essential** package contains essential build tools that Julia needs to build some of its own packages. If the installation was successful, then it is now possible to run Julia at the command prompt. You can test this by typing **julia**. Exit from Julia by typing **exit()**.\r\n\r\n###<a name=\"ec2-install-gmh\"/>Step 7.4 Install GMH, which will install IJulia and additional Julia packages\r\n\r\nAt the SSH command line, execute:\r\n\r\n```\r\njulia -e 'Pkg.clone(\"git://github.com/QuantifyingUncertainty/GeneralizedMetropolisHastings.jl\")'\r\n```\r\n\r\nThe REQUIRE file at the top of the tree in the GMH GitHub repository contains a list of all the required packages for the GMH repository, and will install them. \r\n\r\nThe IJulia package (which enables access to Julia via a web browser) installs its own [Jupyter](http://jupyter.org) server. To add this server to your path so it can be started from the command line, add the following line to the file **/home/ubuntu/.profile**:\r\n\r\n```\r\necho 'PATH=\"$PATH:/home/ubuntu/.julia/v0.4/Conda/deps/usr/bin\"' >> /home/ubuntu/.profile\r\n```\r\n\r\n###<a name=\"ec2-jupyter-remote\"/>Step 7.5 Prepare a Jupyter Notebook server for remote access\r\n\r\nFor the most up-to-date information on these steps, check the [Jupyter](http://jupyter-notebook.readthedocs.org/en/latest/public_server.html) documentation. Some of these steps (Securing the Notebook Server) should only be performed *after* publishing the AMI (see [Using GMH on an EC2 AMI](#gmh-on-aws)). \r\n\r\nStart by generating a **jupyter_notebook_config.py** file:\r\n\r\n```\r\njupyter notebook --generate-config\r\n\r\n```\r\n\r\nIn the resulting **/home/ubuntu/.jupyter/jupyter_notebook_config.py** file, uncomment and edit the following lines:\r\n\r\n```\r\nc.NotebookApp.ip = '*'\r\nc.NotebookApp.port = 8998\r\nc.NotebookApp.open_browser = False\r\n```\r\n\r\nYou can now start a Jupyter Notebook server from the command line:\r\n\r\n```\r\njupyter notebook\r\n```\r\n\r\nPlease note that access to this server is not secured so it is vulnerable to outside attack. You can check that it is running (unsecured) by opening a web browser and going to **http://aws_server_ip_address:8998**, but remember to shut down the server immediately after closing the browser connection by pressing twice Control-C in the SSH terminal and making sure that you see the message \"Shutting down kernels\".\r\n\r\n###<a name=\"ami-create\"/>Step 7.6 Create the AMI\r\n\r\nBefore creating the AMI, you must remove the SSH key with which the instance was started. To do so, follow the steps in the following article:\r\n\r\nhttps://aws.amazon.com/articles/0155828273219400\r\n\r\nStop the instance customised above from the EC2 console, and follow these steps to create the AMI:\r\n\r\nhttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html#how-to-create-ebs-ami\r\n\r\nHere are general guidelines to share a public AMI:\r\nhttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sharing-amis.html\r\n\r\n## 8. References <a name=\"refs\"/>\r\n\r\n<a name=\"calder14\"/>Calderhead B. (2014), [A general construction for parallelizing Metropolis-Hastings algorithms](http://www.pnas.org/content/111/49/17408.abstract), PNAS, Vol: 111, Pages: 17408-17413\r\n\r\n ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}